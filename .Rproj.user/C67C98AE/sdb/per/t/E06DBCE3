{
    "contents" : "#ifndef GIBBS_H\n#define GIBBS_H\n\n#include \"RcppArmadillo.h\"\n#include <omp.h>\n\nusing namespace Rcpp;\nusing namespace arma;\n\n\nstruct kernel_coeffs_type\n{\n  arma::mat mu;\n  arma::vec mu_0;\n  arma::mat Omega;\n  arma::mat Sigma;\n  double epsilon;\n};\n\n\nclass MCMC\n{\n  private:\n  mat Y;            // the data (n,J)\n  vec C;            // the group membership (n,1)\n  int K;     // number of mixture components \n  int J;            // the number of groups\n  int n;            // number of observations\n  int p;            // observation dimension\n  int num_iter, num_burnin, num_thin, num_display;   // number of iteration, burnin and thinning\n  int seed;         // initial random seed\n\n  /* --- hyperparameters --- */\n\n  double nu_2;        // nu_2 = p + 2\n  int nu_1;   // nu_1 = p + 2\n  // Hyperparameter of the Inverse Wishart on Psi_1\n  mat Psi_2; //  = eye<mat>(p,p);  \n  // mean of the Normal prior on m_1\n  vec m_2; // (p);  m_2.zeros();    \n  // Covariance of the Normal prior on m_1\n  mat inv_S_2; // =  eye<mat>(p,p); S_2 = S_2/1000;   \n  // k_0 prior parameters\n  vec tau_k0;  //  tau.fill(4);\n  // alpha parameters\n  vec tau_alpha;  // (2); tau_alpha.fill(1);\n  double tau_epsilon;\n  vec tau_epsilon0;\n  double epsilon0_par;\n  bool merge_step;  // \n  double merge_par;\n  // latent indicator initial values\n  uvec Z_input; \n  \n  int length_chain; \n  \n  vec saveK0, saveEpsilon0, saveAlpha;\n  mat saveOdds, saveEpsilon, saveM1;\n  cube saveW, saveMu, saveMu0, saveOmega, saveOmega1;\n  umat saveZ;\n  \n  \n  void main_loop(Rcpp::List state);\n  kernel_coeffs_type InitMuSigma(uvec Z, double epsilon0, int k);\n\n  Rcpp::List GenerateZetas( mat loglike,\n                            arma::mat logW );\n\n  Rcpp::List UpdateZetas(   arma::cube mu, \n                            arma::cube Omega, \n                            arma::mat logW );\n  \n  double UpdateAlpha(double alpha, arma::mat N, double alpha_par);\n  \n  \n  arma::mat UpdateLogWs(   arma::mat N, \n                           double alpha  );\n                            \n  kernel_coeffs_type UpdateMuSigmaEpsilon(  arma::uvec Z,\n                              int k,  \n                              arma::vec mu_0,\n                              arma::mat Sigma_1, \n                              arma::mat Omega_1, \n                              double k_0, \n                              double epsilon,\n                              double epsilon0,\n                              arma::vec m_1,\n                              arma::mat mean_std,\n                              arma::mat cov_std  );      \n                              \n  double UpdateK0(  arma::cube Omega, \n                    arma::mat mu_0,\n                    arma::vec m_1  );        \n                    \n  arma::mat UpdateSigma1(arma::cube Omega);\n  \n  arma::vec UpdateM1(  double k_0, \n                        arma::mat mu_0, \n                        arma::cube Omega );\n  \n                  \n  double UpdateEpsilon0(  double epsilon0, \n                          arma::vec epsilon, \n                          double tau_epsilon, \n                          arma::vec tau_epsilon0,\n                          double epsilon0_par  );                   \n  \n  kernel_coeffs_type PriorMuSigmaEpsilon( arma::mat Sigma_1, \n                                          arma::mat Omega_1, \n                                          double k_0, \n                                          double epsilon0,\n                                          arma::vec m_1 ); \n\n  \n  public:\n  \n  // constructor \n  MCMC( mat Y, \n        vec C, \n        Rcpp::List prior,\n        Rcpp::List mcmc,\n        Rcpp::List state );\n        \n  Rcpp::List get_chain();\n      \n  \n};\n\n\n\n#endif\n\n\n",
    "created" : 1430414285560.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "295672431",
    "id" : "E06DBCE3",
    "lastKnownWriteTime" : 1430517754,
    "path" : "~/Dropbox/Duke/Thesis/locally_tied_stick_breaking/code/V7/MPK/MPK/src/gibbs.h",
    "project_path" : "src/gibbs.h",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "h"
}