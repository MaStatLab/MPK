{
    "contents" : "#include \"helpers.h\"\n#include \"RcppArmadillo.h\"\n\n\nusing namespace Rcpp;\nusing namespace arma;\n\n\n// [[Rcpp::export]]\nRcpp::List calib( arma::mat Y, \n                  arma::vec C,\n                  arma::mat Z,  \n                  NumericVector mu_input,\n                  IntegerVector mu_dim,\n                  NumericVector mu0_input,\n                  IntegerVector mu0_dim\n                )\n{\n  \n  arma::cube mu(mu_input.begin(), mu_dim[0], mu_dim[1], mu_dim[2]);\n  arma::cube mu0(mu0_input.begin(), mu0_dim[0], mu0_dim[1], mu0_dim[2]);\n  \n  int n = Y.n_rows;\n  int p = Y.n_cols;\n  int niter = Z.n_rows;\n  cube calibration(niter,p,n); calibration.fill(0); \n  mat calibrationMedian(n,p); calibrationMedian.fill(0);\n  \n  for(int it=0; it<niter; it++)\n  {\n    for(int i=0; i<n; i++)\n      calibration.slice(i).row(it) =   mu.slice(it).cols(Z(it,i)*p,Z(it,i)*p+p-1).row(C(i)) - mu0.slice(it).col(Z(it,i)).t();\n  }  \n  \n  for( int i = 0; i < n; i++)\n    calibrationMedian.row(i) = median(calibration.slice(i),0);\n  \n  return Rcpp::List::create(  \n    Rcpp::Named( \"Y_cal\" ) = Y - calibrationMedian,\n    Rcpp::Named( \"calibration_distribution\" ) = calibration,\n    Rcpp::Named( \"calibration_median\" ) = calibrationMedian \n  ) ;    \n}\n",
    "created" : 1430513987634.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2067923186",
    "id" : "CA862B42",
    "lastKnownWriteTime" : 1430413363,
    "path" : "~/Dropbox/Duke/Thesis/locally_tied_stick_breaking/code/V7/MPK/MPK/src/calibrate.cpp",
    "project_path" : "src/calibrate.cpp",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "cpp"
}