{
    "contents" : "#' Calibration across data-sets\n#'\n#' This function calibrates data-sets by removing misalignment.   \n#'\n#' @param x An \\code{MPG} object\n#' @return A list with three objects: \n#' \\code{Ycal} is a matrix containing the calibrated data;\n#' \\code{calibration_distribution} is an array \n#' with the posterior distribution of the shift for each observation;\n#' \\code{calibration_median} is a matrix with the posterior median shift \n#' for each observation.\n#' \n#' @examples\n#' n = c(250, 250)\n#' p = 4\n#' \n#' Y1 = rbind( matrix( rnorm( n[1]*p), ncol = p), matrix( rnorm(n[2]*p) + 3, ncol = p))\n#' Y2 = rbind( matrix( rnorm( n[1]*p), ncol = p), matrix( rnorm(n[2]*p) + 4, ncol = p))\n#' Y = rbind(Y1, Y2)\n#' C = c( rep(1,sum(n)), rep(2,sum(n)))\n#' \n#' ans = mpk(Y, C)\n#' cal = calibrate(ans)\n#' par(mfrow=c(1,2))\n#' plot(Y, col = C)\n#' plot(cal$Y_cal, col = C)\ncalibrate <- function(x)\n{\n  if(class(x)!=\"MPK\")\n  {\n    print(\"ERROR: Input's class should be MPK.\")\n    return(0)\n  }\n  C = x$data$C - 1\n  Z = x$chain$Z - 1\n  output = calib(x$data$Y, \n                 C, \n                 Z, \n                 x$chain$mus, dim(x$chain$mus),\n                 x$chain$mu_0, dim(x$chain$mu_0) ) \n  colnames(output$Y_cal) = colnames(x$data$Y)\n  return(output)\n  \n}",
    "created" : 1430514086736.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1423610149",
    "id" : "D448B47F",
    "lastKnownWriteTime" : 1430515474,
    "path" : "~/Dropbox/Duke/Thesis/locally_tied_stick_breaking/code/V7/MPK/MPK/R/calibrate.R",
    "project_path" : "R/calibrate.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}